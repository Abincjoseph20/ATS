# Generated by Django 5.2 on 2025-05-16 02:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('mainapp', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='resume',
            name='user',
        ),
        migrations.AddField(
            model_name='resume',
            name='ats_score',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='resume',
            name='job_role',
            field=models.CharField(default='Not Specified', max_length=255),
        ),
        migrations.AddField(
            model_name='resume',
            name='matched_keywords',
            field=models.TextField(default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='resume',
            name='name',
            field=models.CharField(default='[]', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='resume',
            name='phone_number',
            field=models.CharField(default='0000000000', max_length=10),
        ),
        migrations.AddField(
            model_name='resume',
            name='qualification',
            field=models.CharField(choices=[('10th', '10th'), ('12th', '12th'), ('Diploma', 'Diploma'), ('UG', 'Undergraduate'), ('PG', 'Postgraduate'), ('MBA', 'Master of Business Administration'), ('MCA', 'Master of Computer Applications'), ('PhD', 'Doctor of Philosophy'), ('BTech', 'Bachelor of Technology'), ('MTech', 'Master of Technology'), ('BSc', 'Bachelor of Science'), ('MSc', 'Master of Science'), ('BA', 'Bachelor of Arts'), ('MA', 'Master of Arts'), ('BCom', 'Bachelor of Commerce'), ('MCom', 'Master of Commerce'), ('LLB', 'Bachelor of Laws'), ('LLM', 'Master of Laws'), ('BBA', 'Bachelor of Business Administration'), ('BCA', 'Bachelor of Computer Applications')], default='10th', max_length=15),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='resume',
            name='raw_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('role', models.CharField(choices=[('regular', 'Regular User'), ('analyst', 'Analyst')], default='regular', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='AnalysisResult',
        ),
    ]
